# Generated by Django 5.0.1 on 2025-09-17 06:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IssueCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Issue Category',
                'verbose_name_plural': 'Issue Categories',
                'db_table': 'issue_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('address', models.CharField(max_length=500)),
                ('votes', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['official', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_issues', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='issues.issuecategory')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issues',
                'db_table': 'issues',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='issues.issue')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='issues.issuecomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Comment',
                'verbose_name_plural': 'Issue Comments',
                'db_table': 'issue_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='issues/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='issues.issue')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Image',
                'verbose_name_plural': 'Issue Images',
                'db_table': 'issue_images',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_comments', models.BooleanField(default=True)),
                ('notify_status_changes', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='issues.issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Subscription',
                'verbose_name_plural': 'Issue Subscriptions',
                'db_table': 'issue_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='IssueTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('created', 'Issue Created'), ('status_changed', 'Status Changed'), ('assigned', 'Assigned to Official'), ('unassigned', 'Unassigned'), ('priority_changed', 'Priority Changed'), ('comment_added', 'Comment Added'), ('image_added', 'Image Added'), ('resolved', 'Issue Resolved'), ('reopened', 'Issue Reopened'), ('closed', 'Issue Closed')], max_length=50)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='issues.issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Timeline Event',
                'verbose_name_plural': 'Issue Timeline Events',
                'db_table': 'issue_timeline',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_votes', to='issues.issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Vote',
                'verbose_name_plural': 'Issue Votes',
                'db_table': 'issue_votes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['status', 'priority'], name='issues_status_88878d_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['category', 'status'], name='issues_categor_81e5cf_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['reported_by', 'status'], name='issues_reporte_8c153c_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['created_at'], name='issues_created_febe30_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='issuesubscription',
            unique_together={('issue', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='issuevote',
            unique_together={('issue', 'user')},
        ),
    ]
